import java.util.ArrayList;
import java.util.List;

/**
 * Example FOR 
 *
 * Created By @author XD.Wang
 * Date 2020-9-14 16:17:40
 * Generated by Coder-Plus
 */
public class WmEPoiSignagePicExample {
    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> orCriteria;

    public WmEPoiSignagePicExample() {
        orCriteria = new ArrayList<>();
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOrCriteria() {
        return orCriteria;
    }

    public void or(Criteria criteria) {
        orCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        orCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (orCriteria.size() == 0) {
            orCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        return new Criteria();
    }

    public void clear() {
        orCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    protected abstract static class BaseCriteria {

        protected List<Criterion> criteria;

        protected BaseCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Integer value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Integer value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Integer value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Integer value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Integer value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Integer> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Integer> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Integer value1, Integer value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Integer value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Integer value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Integer value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Integer value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Integer value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Integer value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Integer> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Integer> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Integer value1, Integer value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Integer value1, Integer value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andGroupIdIsNull() {
            addCriterion("group_id is null");
        }

        public Criteria andGroupIdIsNotNull() {
            addCriterion("group_id is not null");
            return (Criteria) this;
        }

        public Criteria andGroupIdEqualTo(String value) {
            addCriterion("group_id =", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdNotEqualTo(String value) {
            addCriterion("group_id <>", value, "groupId");
            return (Criteria) this;
        }

        public Criteria andGroupIdLike(String value) {
            addCriterion("group_id like '%groupId%'");
            return (Criteria) this;
        }

        public Criteria andGroupIdLikeLeft(String value) {
            addCriterion("group_id like '%groupId'");
            return (Criteria) this;
        }

        public Criteria andGroupIdLikeRight(String value) {
            addCriterion("group_id like 'groupId%'");
            return (Criteria) this;
        }

        public Criteria andWmPoiIdIsNull() {
            addCriterion("wm_poi_id is null");
        }

        public Criteria andWmPoiIdIsNotNull() {
            addCriterion("wm_poi_id is not null");
            return (Criteria) this;
        }

        public Criteria andWmPoiIdEqualTo(Long value) {
            addCriterion("wm_poi_id =", value, "wmPoiId");
            return (Criteria) this;
        }

        public Criteria andWmPoiIdNotEqualTo(Long value) {
            addCriterion("wm_poi_id <>", value, "wmPoiId");
            return (Criteria) this;
        }

        public Criteria andWmPoiIdGreaterThan(Long value) {
            addCriterion("wm_poi_id >", value, "wmPoiId");
            return (Criteria) this;
        }

        public Criteria andWmPoiIdGreaterThanOrEqualTo(Long value) {
            addCriterion("wm_poi_id >=", value, "wmPoiId");
            return (Criteria) this;
        }

        public Criteria andWmPoiIdLessThan(Long value) {
            addCriterion("wm_poi_id <", value, "wmPoiId");
            return (Criteria) this;
        }

        public Criteria andWmPoiIdLessThanOrEqualTo(Long value) {
            addCriterion("wm_poi_id <=", value, "wmPoiId");
            return (Criteria) this;
        }

        public Criteria andWmPoiIdIn(List<Long> values) {
            addCriterion("wm_poi_id in", values, "wmPoiId");
            return (Criteria) this;
        }

        public Criteria andWmPoiIdNotIn(List<Long> values) {
            addCriterion("wm_poi_id not in", values, "wmPoiId");
            return (Criteria) this;
        }

        public Criteria andWmPoiIdBetween(Long value1, Long value2) {
            addCriterion("wm_poi_id between", value1, value2, "wmPoiId");
            return (Criteria) this;
        }

        public Criteria andWmPoiIdNotBetween(Long value1, Long value2) {
            addCriterion("wm_poi_id not between", value1, value2, "wmPoiId");
            return (Criteria) this;
        }

        public Criteria andSignagePicUrlIsNull() {
            addCriterion("signage_pic_url is null");
        }

        public Criteria andSignagePicUrlIsNotNull() {
            addCriterion("signage_pic_url is not null");
            return (Criteria) this;
        }

        public Criteria andSignagePicUrlEqualTo(String value) {
            addCriterion("signage_pic_url =", value, "signagePicUrl");
            return (Criteria) this;
        }

        public Criteria andSignagePicUrlNotEqualTo(String value) {
            addCriterion("signage_pic_url <>", value, "signagePicUrl");
            return (Criteria) this;
        }

        public Criteria andSignagePicUrlLike(String value) {
            addCriterion("signage_pic_url like '%signagePicUrl%'");
            return (Criteria) this;
        }

        public Criteria andSignagePicUrlLikeLeft(String value) {
            addCriterion("signage_pic_url like '%signagePicUrl'");
            return (Criteria) this;
        }

        public Criteria andSignagePicUrlLikeRight(String value) {
            addCriterion("signage_pic_url like 'signagePicUrl%'");
            return (Criteria) this;
        }
    }

    public static class Criteria extends BaseCriteria {

    protected Criteria() {
        super();
    }

    public static class Criterion {

        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}